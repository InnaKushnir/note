services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/code
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

    env_file:
      - .env
    depends_on:
      - db

  db:
    image: postgres:14-alpine
    volumes:
      - db_pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"

  redis:
    image: "redis:alpine"
    volumes:
      - redis_data:/var/lib/rabbitmq/


  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
            celery -A  note worker -l INFO -P solo "
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
          celery -A note beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - web
      - redis
      - db
    restart: on-failure
    env_file:
      - .env

volumes:
  db_pgdata:
  redis_data:


